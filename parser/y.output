Terminals unused in grammar

   "!"
   '{'
   '}'
   GT
   LT
   '^'
   SINGLE_EXPR


State 88 conflicts: 1 shift/reduce
State 133 conflicts: 1 shift/reduce


Grammar

    0 $accept: program "end-of-file"

    1 program: statement_list
    2        | expr

    3 statement_list: statement
    4               | statement_list statement

    5 block: OBRACE statement_list EBRACE

    6 qualified_block: "if" expr "then" statement
    7                | "if" expr block
    8                | "if" expr "then" statement "else" statement
    9                | "if" expr block "else" statement
   10                | "while" expr "do" statement
   11                | "while" expr block
   12                | block
   13                | function_def

   14 statement: expr ';'
   15          | qualified_block

   16 assignment: expr '=' expr

   17 newvar: "var" varname

   18 varname: NAME
   19        | '`' expr '`'

   20 expr: expr INTERP_BEGIN expr INTERP_END expr
   21     | INTERP_BEGIN expr INTERP_END expr
   22     | expr INTERP_BEGIN expr INTERP_END
   23     | assignment
   24     | compound
   25     | newvar
   26     | "print" expr
   27     | expr "&&" expr
   28     | expr "||" expr
   29     | expr "xor" expr
   30     | '!' expr
   31     | expr '>' expr
   32     | expr '<' expr
   33     | expr "==" expr
   34     | expr "<=" expr
   35     | expr ">=" expr
   36     | expr "!=" expr
   37     | expr "gt" expr
   38     | expr "lt" expr
   39     | expr "eq" expr
   40     | expr "ne" expr
   41     | expr "le" expr
   42     | expr "ge" expr
   43     | expr ':' expr
   44     | expr '+' expr
   45     | expr '-' expr
   46     | expr '*' expr
   47     | expr '/' expr
   48     | '-' expr
   49     | '+' expr
   50     | '(' expr ')'
   51     | expr '[' expr ']'
   52     | "eval" expr
   53     | STRLIT
   54     | list
   55     | varname
   56     | INTEGER
   57     | FLOAT
   58     | "nothing"
   59     | "true"
   60     | "false"
   61     | function_call

   62 function_call: expr '(' comma_exprs ')'
   63              | varname comma_exprs
   64              | expr '(' ')'

   65 list: '[' comma_exprs ']'
   66     | '[' ']'

   67 comma_exprs: expr
   68            | comma_exprs ',' expr

   69 function_def: "def" varname function_params statement
   70             | "def" varname function_params "as" statement
   71             | "def" varname block
   72             | "def" varname "as" statement

   73 function_params: '(' comma_names ')'
   74                | comma_names
   75                | '(' ')'

   76 comma_names: varname
   77            | comma_names ',' varname

   78 compound: varname "++"
   79         | varname "--"
   80         | varname "+=" expr
   81         | varname "-=" expr
   82         | varname "*=" expr
   83         | varname "/=" expr
   84         | varname ":=" expr


Terminals, with rules where they appear

"end-of-file" (0) 0
'!' (33) 30
'(' (40) 50 62 64 73 75
')' (41) 50 62 64 73 75
'*' (42) 46
'+' (43) 44 49
',' (44) 68 77
'-' (45) 45 48
'/' (47) 47
':' (58) 43
';' (59) 14
'<' (60) 32
'=' (61) 16
'>' (62) 31
'[' (91) 51 65 66
']' (93) 51 65 66
'^' (94)
'`' (96) 19
'{' (123)
'}' (125)
error (256)
"var" (258) 17
"print" (259) 26
"if" (260) 6 7 8 9
"then" (261) 6 8
"else" (262) 8 9
"while" (263) 10 11
"do" (264) 10
"def" (265) 69 70 71 72
"as" (266) 70 72
"eval" (267) 52
"nothing" (268) 58
"true" (269) 59
"false" (270) 60
"==" (271) 33
"<=" (272) 34
">=" (273) 35
"!=" (274) 36
"eq" (275) 39
"le" (276) 41
"ge" (277) 42
"lt" (278) 38
"gt" (279) 37
"ne" (280) 40
"&&" (281) 27
"||" (282) 28
"!" (283)
"xor" (284) 29
"++" (285) 78
"--" (286) 79
"+=" (287) 80
"-=" (288) 81
"*=" (289) 82
"/=" (290) 83
":=" (291) 84
OBRACE (292) 5
EBRACE (293) 5
INTERP_BEGIN (294) 20 21 22
INTERP_END (295) 20 21 22
UNARY_MINUS (296)
NAME (297) 18
INTEGER (298) 56
STRLIT (299) 53
FLOAT (300) 57
PRINT_PREC (301)
EVAL_PREC (302)
FUNC_CALL (303)
COMMAS (304)
GT (305)
LT (306)
PAREN_FUNC_CALL (307)
SINGLE_EXPR (308)
NAMEPREC (309)


Nonterminals, with rules where they appear

$accept (74)
    on left: 0
program (75)
    on left: 1 2, on right: 0
statement_list (76)
    on left: 3 4, on right: 1 4 5
block (77)
    on left: 5, on right: 7 9 11 12 71
qualified_block (78)
    on left: 6 7 8 9 10 11 12 13, on right: 15
statement (79)
    on left: 14 15, on right: 3 4 6 8 9 10 69 70 72
assignment (80)
    on left: 16, on right: 23
newvar (81)
    on left: 17, on right: 25
varname (82)
    on left: 18 19, on right: 17 55 63 69 70 71 72 76 77 78 79 80 81
    82 83 84
expr (83)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
    38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
    59 60 61, on right: 2 6 7 8 9 10 11 14 16 19 20 21 22 26 27 28
    29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
    50 51 52 62 64 67 68 80 81 82 83 84
function_call (84)
    on left: 62 63 64, on right: 61
list (85)
    on left: 65 66, on right: 54
comma_exprs (86)
    on left: 67 68, on right: 62 63 65 68
function_def (87)
    on left: 69 70 71 72, on right: 13
function_params (88)
    on left: 73 74 75, on right: 69 70
comma_names (89)
    on left: 76 77, on right: 73 74 77
compound (90)
    on left: 78 79 80 81 82 83 84, on right: 24


State 0

    0 $accept: . program "end-of-file"

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "if"          shift, and go to state 3
    "while"       shift, and go to state 4
    "def"         shift, and go to state 5
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    OBRACE        shift, and go to state 10
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    program          go to state 22
    statement_list   go to state 23
    block            go to state 24
    qualified_block  go to state 25
    statement        go to state 26
    assignment       go to state 27
    newvar           go to state 28
    varname          go to state 29
    expr             go to state 30
    function_call    go to state 31
    list             go to state 32
    function_def     go to state 33
    compound         go to state 34


State 1

   17 newvar: "var" . varname

    NAME  shift, and go to state 12
    '`'   shift, and go to state 21

    varname  go to state 35


State 2

   26 expr: "print" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 36
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 3

    6 qualified_block: "if" . expr "then" statement
    7                | "if" . expr block
    8                | "if" . expr "then" statement "else" statement
    9                | "if" . expr block "else" statement

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 37
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 4

   10 qualified_block: "while" . expr "do" statement
   11                | "while" . expr block

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 38
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 5

   69 function_def: "def" . varname function_params statement
   70             | "def" . varname function_params "as" statement
   71             | "def" . varname block
   72             | "def" . varname "as" statement

    NAME  shift, and go to state 12
    '`'   shift, and go to state 21

    varname  go to state 39


State 6

   52 expr: "eval" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 40
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 7

   58 expr: "nothing" .

    $default  reduce using rule 58 (expr)


State 8

   59 expr: "true" .

    $default  reduce using rule 59 (expr)


State 9

   60 expr: "false" .

    $default  reduce using rule 60 (expr)


State 10

    5 block: OBRACE . statement_list EBRACE

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "if"          shift, and go to state 3
    "while"       shift, and go to state 4
    "def"         shift, and go to state 5
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    OBRACE        shift, and go to state 10
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    statement_list   go to state 41
    block            go to state 24
    qualified_block  go to state 25
    statement        go to state 26
    assignment       go to state 27
    newvar           go to state 28
    varname          go to state 29
    expr             go to state 42
    function_call    go to state 31
    list             go to state 32
    function_def     go to state 33
    compound         go to state 34


State 11

   21 expr: INTERP_BEGIN . expr INTERP_END expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 43
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 12

   18 varname: NAME .

    $default  reduce using rule 18 (varname)


State 13

   56 expr: INTEGER .

    $default  reduce using rule 56 (expr)


State 14

   53 expr: STRLIT .

    $default  reduce using rule 53 (expr)


State 15

   57 expr: FLOAT .

    $default  reduce using rule 57 (expr)


State 16

   49 expr: '+' . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 44
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 17

   48 expr: '-' . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 45
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 18

   30 expr: '!' . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 46
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 19

   65 list: '[' . comma_exprs ']'
   66     | '[' . ']'

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21
    ']'           shift, and go to state 47

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 48
    function_call  go to state 31
    list           go to state 32
    comma_exprs    go to state 49
    compound       go to state 34


State 20

   50 expr: '(' . expr ')'

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 50
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 21

   19 varname: '`' . expr '`'

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 51
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 22

    0 $accept: program . "end-of-file"

    "end-of-file"  shift, and go to state 52


State 23

    1 program: statement_list .
    4 statement_list: statement_list . statement

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "if"          shift, and go to state 3
    "while"       shift, and go to state 4
    "def"         shift, and go to state 5
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    OBRACE        shift, and go to state 10
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    $default  reduce using rule 1 (program)

    block            go to state 24
    qualified_block  go to state 25
    statement        go to state 53
    assignment       go to state 27
    newvar           go to state 28
    varname          go to state 29
    expr             go to state 42
    function_call    go to state 31
    list             go to state 32
    function_def     go to state 33
    compound         go to state 34


State 24

   12 qualified_block: block .

    $default  reduce using rule 12 (qualified_block)


State 25

   15 statement: qualified_block .

    $default  reduce using rule 15 (statement)


State 26

    3 statement_list: statement .

    $default  reduce using rule 3 (statement_list)


State 27

   23 expr: assignment .

    $default  reduce using rule 23 (expr)


State 28

   25 expr: newvar .

    $default  reduce using rule 25 (expr)


State 29

   55 expr: varname .
   63 function_call: varname . comma_exprs
   78 compound: varname . "++"
   79         | varname . "--"
   80         | varname . "+=" expr
   81         | varname . "-=" expr
   82         | varname . "*=" expr
   83         | varname . "/=" expr
   84         | varname . ":=" expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    "++"          shift, and go to state 54
    "--"          shift, and go to state 55
    "+="          shift, and go to state 56
    "-="          shift, and go to state 57
    "*="          shift, and go to state 58
    "/="          shift, and go to state 59
    ":="          shift, and go to state 60
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '!'           shift, and go to state 18
    '`'           shift, and go to state 21

    $default  reduce using rule 55 (expr)

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 48
    function_call  go to state 31
    list           go to state 32
    comma_exprs    go to state 61
    compound       go to state 34


State 30

    2 program: expr .
   14 statement: expr . ';'
   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    "=="          shift, and go to state 62
    "<="          shift, and go to state 63
    ">="          shift, and go to state 64
    "!="          shift, and go to state 65
    "eq"          shift, and go to state 66
    "le"          shift, and go to state 67
    "ge"          shift, and go to state 68
    "lt"          shift, and go to state 69
    "gt"          shift, and go to state 70
    "ne"          shift, and go to state 71
    "&&"          shift, and go to state 72
    "||"          shift, and go to state 73
    "xor"         shift, and go to state 74
    INTERP_BEGIN  shift, and go to state 75
    '='           shift, and go to state 76
    '<'           shift, and go to state 77
    '>'           shift, and go to state 78
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85
    ';'           shift, and go to state 86

    $default  reduce using rule 2 (program)


State 31

   61 expr: function_call .

    $default  reduce using rule 61 (expr)


State 32

   54 expr: list .

    $default  reduce using rule 54 (expr)


State 33

   13 qualified_block: function_def .

    $default  reduce using rule 13 (qualified_block)


State 34

   24 expr: compound .

    $default  reduce using rule 24 (expr)


State 35

   17 newvar: "var" varname .

    $default  reduce using rule 17 (newvar)


State 36

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   26     | "print" expr .
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    "=="          shift, and go to state 62
    "<="          shift, and go to state 63
    ">="          shift, and go to state 64
    "!="          shift, and go to state 65
    "eq"          shift, and go to state 66
    "le"          shift, and go to state 67
    "ge"          shift, and go to state 68
    "lt"          shift, and go to state 69
    "gt"          shift, and go to state 70
    "ne"          shift, and go to state 71
    "&&"          shift, and go to state 72
    "||"          shift, and go to state 73
    "xor"         shift, and go to state 74
    INTERP_BEGIN  shift, and go to state 75
    '='           shift, and go to state 76
    '<'           shift, and go to state 77
    '>'           shift, and go to state 78
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 26 (expr)


State 37

    6 qualified_block: "if" expr . "then" statement
    7                | "if" expr . block
    8                | "if" expr . "then" statement "else" statement
    9                | "if" expr . block "else" statement
   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    "then"        shift, and go to state 87
    "=="          shift, and go to state 62
    "<="          shift, and go to state 63
    ">="          shift, and go to state 64
    "!="          shift, and go to state 65
    "eq"          shift, and go to state 66
    "le"          shift, and go to state 67
    "ge"          shift, and go to state 68
    "lt"          shift, and go to state 69
    "gt"          shift, and go to state 70
    "ne"          shift, and go to state 71
    "&&"          shift, and go to state 72
    "||"          shift, and go to state 73
    "xor"         shift, and go to state 74
    OBRACE        shift, and go to state 10
    INTERP_BEGIN  shift, and go to state 75
    '='           shift, and go to state 76
    '<'           shift, and go to state 77
    '>'           shift, and go to state 78
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    block  go to state 88


State 38

   10 qualified_block: "while" expr . "do" statement
   11                | "while" expr . block
   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    "do"          shift, and go to state 89
    "=="          shift, and go to state 62
    "<="          shift, and go to state 63
    ">="          shift, and go to state 64
    "!="          shift, and go to state 65
    "eq"          shift, and go to state 66
    "le"          shift, and go to state 67
    "ge"          shift, and go to state 68
    "lt"          shift, and go to state 69
    "gt"          shift, and go to state 70
    "ne"          shift, and go to state 71
    "&&"          shift, and go to state 72
    "||"          shift, and go to state 73
    "xor"         shift, and go to state 74
    OBRACE        shift, and go to state 10
    INTERP_BEGIN  shift, and go to state 75
    '='           shift, and go to state 76
    '<'           shift, and go to state 77
    '>'           shift, and go to state 78
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    block  go to state 90


State 39

   69 function_def: "def" varname . function_params statement
   70             | "def" varname . function_params "as" statement
   71             | "def" varname . block
   72             | "def" varname . "as" statement

    "as"    shift, and go to state 91
    OBRACE  shift, and go to state 10
    NAME    shift, and go to state 12
    '('     shift, and go to state 92
    '`'     shift, and go to state 21

    block            go to state 93
    varname          go to state 94
    function_params  go to state 95
    comma_names      go to state 96


State 40

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   52     | "eval" expr .
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    "=="          shift, and go to state 62
    "<="          shift, and go to state 63
    ">="          shift, and go to state 64
    "!="          shift, and go to state 65
    "eq"          shift, and go to state 66
    "le"          shift, and go to state 67
    "ge"          shift, and go to state 68
    "lt"          shift, and go to state 69
    "gt"          shift, and go to state 70
    "ne"          shift, and go to state 71
    "&&"          shift, and go to state 72
    "||"          shift, and go to state 73
    "xor"         shift, and go to state 74
    INTERP_BEGIN  shift, and go to state 75
    '='           shift, and go to state 76
    '<'           shift, and go to state 77
    '>'           shift, and go to state 78
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 52 (expr)


State 41

    4 statement_list: statement_list . statement
    5 block: OBRACE statement_list . EBRACE

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "if"          shift, and go to state 3
    "while"       shift, and go to state 4
    "def"         shift, and go to state 5
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    OBRACE        shift, and go to state 10
    EBRACE        shift, and go to state 97
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    block            go to state 24
    qualified_block  go to state 25
    statement        go to state 53
    assignment       go to state 27
    newvar           go to state 28
    varname          go to state 29
    expr             go to state 42
    function_call    go to state 31
    list             go to state 32
    function_def     go to state 33
    compound         go to state 34


State 42

   14 statement: expr . ';'
   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    "=="          shift, and go to state 62
    "<="          shift, and go to state 63
    ">="          shift, and go to state 64
    "!="          shift, and go to state 65
    "eq"          shift, and go to state 66
    "le"          shift, and go to state 67
    "ge"          shift, and go to state 68
    "lt"          shift, and go to state 69
    "gt"          shift, and go to state 70
    "ne"          shift, and go to state 71
    "&&"          shift, and go to state 72
    "||"          shift, and go to state 73
    "xor"         shift, and go to state 74
    INTERP_BEGIN  shift, and go to state 75
    '='           shift, and go to state 76
    '<'           shift, and go to state 77
    '>'           shift, and go to state 78
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85
    ';'           shift, and go to state 86


State 43

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   21     | INTERP_BEGIN expr . INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    "=="          shift, and go to state 62
    "<="          shift, and go to state 63
    ">="          shift, and go to state 64
    "!="          shift, and go to state 65
    "eq"          shift, and go to state 66
    "le"          shift, and go to state 67
    "ge"          shift, and go to state 68
    "lt"          shift, and go to state 69
    "gt"          shift, and go to state 70
    "ne"          shift, and go to state 71
    "&&"          shift, and go to state 72
    "||"          shift, and go to state 73
    "xor"         shift, and go to state 74
    INTERP_BEGIN  shift, and go to state 75
    INTERP_END    shift, and go to state 98
    '='           shift, and go to state 76
    '<'           shift, and go to state 77
    '>'           shift, and go to state 78
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85


State 44

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   49     | '+' expr .
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    '('           shift, and go to state 85

    $default  reduce using rule 49 (expr)


State 45

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | '-' expr .
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    '('           shift, and go to state 85

    $default  reduce using rule 48 (expr)


State 46

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   30     | '!' expr .
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 30 (expr)


State 47

   66 list: '[' ']' .

    $default  reduce using rule 66 (list)


State 48

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'
   67 comma_exprs: expr .

    "=="          shift, and go to state 62
    "<="          shift, and go to state 63
    ">="          shift, and go to state 64
    "!="          shift, and go to state 65
    "eq"          shift, and go to state 66
    "le"          shift, and go to state 67
    "ge"          shift, and go to state 68
    "lt"          shift, and go to state 69
    "gt"          shift, and go to state 70
    "ne"          shift, and go to state 71
    "&&"          shift, and go to state 72
    "||"          shift, and go to state 73
    "xor"         shift, and go to state 74
    INTERP_BEGIN  shift, and go to state 75
    '='           shift, and go to state 76
    '<'           shift, and go to state 77
    '>'           shift, and go to state 78
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 67 (comma_exprs)


State 49

   65 list: '[' comma_exprs . ']'
   68 comma_exprs: comma_exprs . ',' expr

    ','  shift, and go to state 99
    ']'  shift, and go to state 100


State 50

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   50     | '(' expr . ')'
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    "=="          shift, and go to state 62
    "<="          shift, and go to state 63
    ">="          shift, and go to state 64
    "!="          shift, and go to state 65
    "eq"          shift, and go to state 66
    "le"          shift, and go to state 67
    "ge"          shift, and go to state 68
    "lt"          shift, and go to state 69
    "gt"          shift, and go to state 70
    "ne"          shift, and go to state 71
    "&&"          shift, and go to state 72
    "||"          shift, and go to state 73
    "xor"         shift, and go to state 74
    INTERP_BEGIN  shift, and go to state 75
    '='           shift, and go to state 76
    '<'           shift, and go to state 77
    '>'           shift, and go to state 78
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85
    ')'           shift, and go to state 101


State 51

   16 assignment: expr . '=' expr
   19 varname: '`' expr . '`'
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    "=="          shift, and go to state 62
    "<="          shift, and go to state 63
    ">="          shift, and go to state 64
    "!="          shift, and go to state 65
    "eq"          shift, and go to state 66
    "le"          shift, and go to state 67
    "ge"          shift, and go to state 68
    "lt"          shift, and go to state 69
    "gt"          shift, and go to state 70
    "ne"          shift, and go to state 71
    "&&"          shift, and go to state 72
    "||"          shift, and go to state 73
    "xor"         shift, and go to state 74
    INTERP_BEGIN  shift, and go to state 75
    '='           shift, and go to state 76
    '<'           shift, and go to state 77
    '>'           shift, and go to state 78
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85
    '`'           shift, and go to state 102


State 52

    0 $accept: program "end-of-file" .

    $default  accept


State 53

    4 statement_list: statement_list statement .

    $default  reduce using rule 4 (statement_list)


State 54

   78 compound: varname "++" .

    $default  reduce using rule 78 (compound)


State 55

   79 compound: varname "--" .

    $default  reduce using rule 79 (compound)


State 56

   80 compound: varname "+=" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 103
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 57

   81 compound: varname "-=" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 104
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 58

   82 compound: varname "*=" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 105
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 59

   83 compound: varname "/=" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 106
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 60

   84 compound: varname ":=" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 107
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 61

   63 function_call: varname comma_exprs .
   68 comma_exprs: comma_exprs . ',' expr

    ','  shift, and go to state 99

    $default  reduce using rule 63 (function_call)


State 62

   33 expr: expr "==" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 108
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 63

   34 expr: expr "<=" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 109
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 64

   35 expr: expr ">=" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 110
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 65

   36 expr: expr "!=" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 111
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 66

   39 expr: expr "eq" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 112
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 67

   41 expr: expr "le" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 113
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 68

   42 expr: expr "ge" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 114
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 69

   38 expr: expr "lt" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 115
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 70

   37 expr: expr "gt" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 116
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 71

   40 expr: expr "ne" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 117
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 72

   27 expr: expr "&&" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 118
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 73

   28 expr: expr "||" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 119
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 74

   29 expr: expr "xor" . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 120
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 75

   20 expr: expr INTERP_BEGIN . expr INTERP_END expr
   22     | expr INTERP_BEGIN . expr INTERP_END

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 121
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 76

   16 assignment: expr '=' . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 122
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 77

   32 expr: expr '<' . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 123
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 78

   31 expr: expr '>' . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 124
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 79

   43 expr: expr ':' . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 125
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 80

   44 expr: expr '+' . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 126
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 81

   45 expr: expr '-' . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 127
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 82

   46 expr: expr '*' . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 128
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 83

   47 expr: expr '/' . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 129
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 84

   51 expr: expr '[' . expr ']'

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 130
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 85

   62 function_call: expr '(' . comma_exprs ')'
   64              | expr '(' . ')'

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21
    ')'           shift, and go to state 131

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 48
    function_call  go to state 31
    list           go to state 32
    comma_exprs    go to state 132
    compound       go to state 34


State 86

   14 statement: expr ';' .

    $default  reduce using rule 14 (statement)


State 87

    6 qualified_block: "if" expr "then" . statement
    8                | "if" expr "then" . statement "else" statement

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "if"          shift, and go to state 3
    "while"       shift, and go to state 4
    "def"         shift, and go to state 5
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    OBRACE        shift, and go to state 10
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    block            go to state 24
    qualified_block  go to state 25
    statement        go to state 133
    assignment       go to state 27
    newvar           go to state 28
    varname          go to state 29
    expr             go to state 42
    function_call    go to state 31
    list             go to state 32
    function_def     go to state 33
    compound         go to state 34


State 88

    7 qualified_block: "if" expr block .
    9                | "if" expr block . "else" statement

    "else"  shift, and go to state 134

    "else"    [reduce using rule 7 (qualified_block)]
    $default  reduce using rule 7 (qualified_block)


State 89

   10 qualified_block: "while" expr "do" . statement

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "if"          shift, and go to state 3
    "while"       shift, and go to state 4
    "def"         shift, and go to state 5
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    OBRACE        shift, and go to state 10
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    block            go to state 24
    qualified_block  go to state 25
    statement        go to state 135
    assignment       go to state 27
    newvar           go to state 28
    varname          go to state 29
    expr             go to state 42
    function_call    go to state 31
    list             go to state 32
    function_def     go to state 33
    compound         go to state 34


State 90

   11 qualified_block: "while" expr block .

    $default  reduce using rule 11 (qualified_block)


State 91

   72 function_def: "def" varname "as" . statement

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "if"          shift, and go to state 3
    "while"       shift, and go to state 4
    "def"         shift, and go to state 5
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    OBRACE        shift, and go to state 10
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    block            go to state 24
    qualified_block  go to state 25
    statement        go to state 136
    assignment       go to state 27
    newvar           go to state 28
    varname          go to state 29
    expr             go to state 42
    function_call    go to state 31
    list             go to state 32
    function_def     go to state 33
    compound         go to state 34


State 92

   73 function_params: '(' . comma_names ')'
   75                | '(' . ')'

    NAME  shift, and go to state 12
    '`'   shift, and go to state 21
    ')'   shift, and go to state 137

    varname      go to state 94
    comma_names  go to state 138


State 93

   71 function_def: "def" varname block .

    $default  reduce using rule 71 (function_def)


State 94

   76 comma_names: varname .

    $default  reduce using rule 76 (comma_names)


State 95

   69 function_def: "def" varname function_params . statement
   70             | "def" varname function_params . "as" statement

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "if"          shift, and go to state 3
    "while"       shift, and go to state 4
    "def"         shift, and go to state 5
    "as"          shift, and go to state 139
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    OBRACE        shift, and go to state 10
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    block            go to state 24
    qualified_block  go to state 25
    statement        go to state 140
    assignment       go to state 27
    newvar           go to state 28
    varname          go to state 29
    expr             go to state 42
    function_call    go to state 31
    list             go to state 32
    function_def     go to state 33
    compound         go to state 34


State 96

   74 function_params: comma_names .
   77 comma_names: comma_names . ',' varname

    ','  shift, and go to state 141

    $default  reduce using rule 74 (function_params)


State 97

    5 block: OBRACE statement_list EBRACE .

    $default  reduce using rule 5 (block)


State 98

   21 expr: INTERP_BEGIN expr INTERP_END . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 142
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 99

   68 comma_exprs: comma_exprs ',' . expr

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 143
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 100

   65 list: '[' comma_exprs ']' .

    $default  reduce using rule 65 (list)


State 101

   50 expr: '(' expr ')' .

    $default  reduce using rule 50 (expr)


State 102

   19 varname: '`' expr '`' .

    $default  reduce using rule 19 (varname)


State 103

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'
   80 compound: varname "+=" expr .

    INTERP_BEGIN  shift, and go to state 75
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 80 (compound)


State 104

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'
   81 compound: varname "-=" expr .

    INTERP_BEGIN  shift, and go to state 75
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 81 (compound)


State 105

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'
   82 compound: varname "*=" expr .

    INTERP_BEGIN  shift, and go to state 75
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 82 (compound)


State 106

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'
   83 compound: varname "/=" expr .

    INTERP_BEGIN  shift, and go to state 75
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 83 (compound)


State 107

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'
   84 compound: varname ":=" expr .

    INTERP_BEGIN  shift, and go to state 75
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 84 (compound)


State 108

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   33     | expr "==" expr .
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 33 (expr)


State 109

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   34     | expr "<=" expr .
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 34 (expr)


State 110

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   35     | expr ">=" expr .
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 35 (expr)


State 111

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   36     | expr "!=" expr .
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 36 (expr)


State 112

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   39     | expr "eq" expr .
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 39 (expr)


State 113

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   41     | expr "le" expr .
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 41 (expr)


State 114

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   42     | expr "ge" expr .
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 42 (expr)


State 115

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   38     | expr "lt" expr .
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 38 (expr)


State 116

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   37     | expr "gt" expr .
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 37 (expr)


State 117

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   40     | expr "ne" expr .
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 40 (expr)


State 118

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   27     | expr "&&" expr .
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    "=="          shift, and go to state 62
    "<="          shift, and go to state 63
    ">="          shift, and go to state 64
    "!="          shift, and go to state 65
    "eq"          shift, and go to state 66
    "le"          shift, and go to state 67
    "ge"          shift, and go to state 68
    "lt"          shift, and go to state 69
    "gt"          shift, and go to state 70
    "ne"          shift, and go to state 71
    INTERP_BEGIN  shift, and go to state 75
    '<'           shift, and go to state 77
    '>'           shift, and go to state 78
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 27 (expr)


State 119

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   28     | expr "||" expr .
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    "=="          shift, and go to state 62
    "<="          shift, and go to state 63
    ">="          shift, and go to state 64
    "!="          shift, and go to state 65
    "eq"          shift, and go to state 66
    "le"          shift, and go to state 67
    "ge"          shift, and go to state 68
    "lt"          shift, and go to state 69
    "gt"          shift, and go to state 70
    "ne"          shift, and go to state 71
    INTERP_BEGIN  shift, and go to state 75
    '<'           shift, and go to state 77
    '>'           shift, and go to state 78
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 28 (expr)


State 120

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   29     | expr "xor" expr .
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    "=="          shift, and go to state 62
    "<="          shift, and go to state 63
    ">="          shift, and go to state 64
    "!="          shift, and go to state 65
    "eq"          shift, and go to state 66
    "le"          shift, and go to state 67
    "ge"          shift, and go to state 68
    "lt"          shift, and go to state 69
    "gt"          shift, and go to state 70
    "ne"          shift, and go to state 71
    INTERP_BEGIN  shift, and go to state 75
    '<'           shift, and go to state 77
    '>'           shift, and go to state 78
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 29 (expr)


State 121

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   20     | expr INTERP_BEGIN expr . INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   22     | expr INTERP_BEGIN expr . INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    "=="          shift, and go to state 62
    "<="          shift, and go to state 63
    ">="          shift, and go to state 64
    "!="          shift, and go to state 65
    "eq"          shift, and go to state 66
    "le"          shift, and go to state 67
    "ge"          shift, and go to state 68
    "lt"          shift, and go to state 69
    "gt"          shift, and go to state 70
    "ne"          shift, and go to state 71
    "&&"          shift, and go to state 72
    "||"          shift, and go to state 73
    "xor"         shift, and go to state 74
    INTERP_BEGIN  shift, and go to state 75
    INTERP_END    shift, and go to state 144
    '='           shift, and go to state 76
    '<'           shift, and go to state 77
    '>'           shift, and go to state 78
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85


State 122

   16 assignment: expr . '=' expr
   16           | expr '=' expr .
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    "=="          shift, and go to state 62
    "<="          shift, and go to state 63
    ">="          shift, and go to state 64
    "!="          shift, and go to state 65
    "eq"          shift, and go to state 66
    "le"          shift, and go to state 67
    "ge"          shift, and go to state 68
    "lt"          shift, and go to state 69
    "gt"          shift, and go to state 70
    "ne"          shift, and go to state 71
    "&&"          shift, and go to state 72
    "||"          shift, and go to state 73
    "xor"         shift, and go to state 74
    INTERP_BEGIN  shift, and go to state 75
    '='           shift, and go to state 76
    '<'           shift, and go to state 77
    '>'           shift, and go to state 78
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 16 (assignment)


State 123

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   32     | expr '<' expr .
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 32 (expr)


State 124

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   31     | expr '>' expr .
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 31 (expr)


State 125

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   43     | expr ':' expr .
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 43 (expr)


State 126

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   44     | expr '+' expr .
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 44 (expr)


State 127

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   45     | expr '-' expr .
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 45 (expr)


State 128

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   46     | expr '*' expr .
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 46 (expr)


State 129

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   47     | expr '/' expr .
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    INTERP_BEGIN  shift, and go to state 75
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 47 (expr)


State 130

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   51     | expr '[' expr . ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    "=="          shift, and go to state 62
    "<="          shift, and go to state 63
    ">="          shift, and go to state 64
    "!="          shift, and go to state 65
    "eq"          shift, and go to state 66
    "le"          shift, and go to state 67
    "ge"          shift, and go to state 68
    "lt"          shift, and go to state 69
    "gt"          shift, and go to state 70
    "ne"          shift, and go to state 71
    "&&"          shift, and go to state 72
    "||"          shift, and go to state 73
    "xor"         shift, and go to state 74
    INTERP_BEGIN  shift, and go to state 75
    '='           shift, and go to state 76
    '<'           shift, and go to state 77
    '>'           shift, and go to state 78
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85
    ']'           shift, and go to state 145


State 131

   64 function_call: expr '(' ')' .

    $default  reduce using rule 64 (function_call)


State 132

   62 function_call: expr '(' comma_exprs . ')'
   68 comma_exprs: comma_exprs . ',' expr

    ','  shift, and go to state 99
    ')'  shift, and go to state 146


State 133

    6 qualified_block: "if" expr "then" statement .
    8                | "if" expr "then" statement . "else" statement

    "else"  shift, and go to state 147

    "else"    [reduce using rule 6 (qualified_block)]
    $default  reduce using rule 6 (qualified_block)


State 134

    9 qualified_block: "if" expr block "else" . statement

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "if"          shift, and go to state 3
    "while"       shift, and go to state 4
    "def"         shift, and go to state 5
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    OBRACE        shift, and go to state 10
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    block            go to state 24
    qualified_block  go to state 25
    statement        go to state 148
    assignment       go to state 27
    newvar           go to state 28
    varname          go to state 29
    expr             go to state 42
    function_call    go to state 31
    list             go to state 32
    function_def     go to state 33
    compound         go to state 34


State 135

   10 qualified_block: "while" expr "do" statement .

    $default  reduce using rule 10 (qualified_block)


State 136

   72 function_def: "def" varname "as" statement .

    $default  reduce using rule 72 (function_def)


State 137

   75 function_params: '(' ')' .

    $default  reduce using rule 75 (function_params)


State 138

   73 function_params: '(' comma_names . ')'
   77 comma_names: comma_names . ',' varname

    ','  shift, and go to state 141
    ')'  shift, and go to state 149


State 139

   70 function_def: "def" varname function_params "as" . statement

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "if"          shift, and go to state 3
    "while"       shift, and go to state 4
    "def"         shift, and go to state 5
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    OBRACE        shift, and go to state 10
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    block            go to state 24
    qualified_block  go to state 25
    statement        go to state 150
    assignment       go to state 27
    newvar           go to state 28
    varname          go to state 29
    expr             go to state 42
    function_call    go to state 31
    list             go to state 32
    function_def     go to state 33
    compound         go to state 34


State 140

   69 function_def: "def" varname function_params statement .

    $default  reduce using rule 69 (function_def)


State 141

   77 comma_names: comma_names ',' . varname

    NAME  shift, and go to state 12
    '`'   shift, and go to state 21

    varname  go to state 151


State 142

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   21     | INTERP_BEGIN expr INTERP_END expr .
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    $default  reduce using rule 21 (expr)


State 143

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'
   68 comma_exprs: comma_exprs ',' expr .

    "=="          shift, and go to state 62
    "<="          shift, and go to state 63
    ">="          shift, and go to state 64
    "!="          shift, and go to state 65
    "eq"          shift, and go to state 66
    "le"          shift, and go to state 67
    "ge"          shift, and go to state 68
    "lt"          shift, and go to state 69
    "gt"          shift, and go to state 70
    "ne"          shift, and go to state 71
    "&&"          shift, and go to state 72
    "||"          shift, and go to state 73
    "xor"         shift, and go to state 74
    INTERP_BEGIN  shift, and go to state 75
    '='           shift, and go to state 76
    '<'           shift, and go to state 77
    '>'           shift, and go to state 78
    ':'           shift, and go to state 79
    '+'           shift, and go to state 80
    '-'           shift, and go to state 81
    '*'           shift, and go to state 82
    '/'           shift, and go to state 83
    '['           shift, and go to state 84
    '('           shift, and go to state 85

    $default  reduce using rule 68 (comma_exprs)


State 144

   20 expr: expr INTERP_BEGIN expr INTERP_END . expr
   22     | expr INTERP_BEGIN expr INTERP_END .

    "var"      shift, and go to state 1
    "print"    shift, and go to state 2
    "eval"     shift, and go to state 6
    "nothing"  shift, and go to state 7
    "true"     shift, and go to state 8
    "false"    shift, and go to state 9
    NAME       shift, and go to state 12
    INTEGER    shift, and go to state 13
    STRLIT     shift, and go to state 14
    FLOAT      shift, and go to state 15
    '!'        shift, and go to state 18
    '`'        shift, and go to state 21

    $default  reduce using rule 22 (expr)

    assignment     go to state 27
    newvar         go to state 28
    varname        go to state 29
    expr           go to state 152
    function_call  go to state 31
    list           go to state 32
    compound       go to state 34


State 145

   51 expr: expr '[' expr ']' .

    $default  reduce using rule 51 (expr)


State 146

   62 function_call: expr '(' comma_exprs ')' .

    $default  reduce using rule 62 (function_call)


State 147

    8 qualified_block: "if" expr "then" statement "else" . statement

    "var"         shift, and go to state 1
    "print"       shift, and go to state 2
    "if"          shift, and go to state 3
    "while"       shift, and go to state 4
    "def"         shift, and go to state 5
    "eval"        shift, and go to state 6
    "nothing"     shift, and go to state 7
    "true"        shift, and go to state 8
    "false"       shift, and go to state 9
    OBRACE        shift, and go to state 10
    INTERP_BEGIN  shift, and go to state 11
    NAME          shift, and go to state 12
    INTEGER       shift, and go to state 13
    STRLIT        shift, and go to state 14
    FLOAT         shift, and go to state 15
    '+'           shift, and go to state 16
    '-'           shift, and go to state 17
    '!'           shift, and go to state 18
    '['           shift, and go to state 19
    '('           shift, and go to state 20
    '`'           shift, and go to state 21

    block            go to state 24
    qualified_block  go to state 25
    statement        go to state 153
    assignment       go to state 27
    newvar           go to state 28
    varname          go to state 29
    expr             go to state 42
    function_call    go to state 31
    list             go to state 32
    function_def     go to state 33
    compound         go to state 34


State 148

    9 qualified_block: "if" expr block "else" statement .

    $default  reduce using rule 9 (qualified_block)


State 149

   73 function_params: '(' comma_names ')' .

    $default  reduce using rule 73 (function_params)


State 150

   70 function_def: "def" varname function_params "as" statement .

    $default  reduce using rule 70 (function_def)


State 151

   77 comma_names: comma_names ',' varname .

    $default  reduce using rule 77 (comma_names)


State 152

   16 assignment: expr . '=' expr
   20 expr: expr . INTERP_BEGIN expr INTERP_END expr
   20     | expr INTERP_BEGIN expr INTERP_END expr .
   22     | expr . INTERP_BEGIN expr INTERP_END
   27     | expr . "&&" expr
   28     | expr . "||" expr
   29     | expr . "xor" expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   33     | expr . "==" expr
   34     | expr . "<=" expr
   35     | expr . ">=" expr
   36     | expr . "!=" expr
   37     | expr . "gt" expr
   38     | expr . "lt" expr
   39     | expr . "eq" expr
   40     | expr . "ne" expr
   41     | expr . "le" expr
   42     | expr . "ge" expr
   43     | expr . ':' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   51     | expr . '[' expr ']'
   62 function_call: expr . '(' comma_exprs ')'
   64              | expr . '(' ')'

    $default  reduce using rule 20 (expr)


State 153

    8 qualified_block: "if" expr "then" statement "else" statement .

    $default  reduce using rule 8 (qualified_block)
